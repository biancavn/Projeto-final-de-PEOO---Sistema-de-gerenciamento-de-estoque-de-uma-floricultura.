
import java.awt.Color;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author lorec
 */
public class EstoqueAtual extends javax.swing.JFrame {

    /**
     * Creates new form EstoqueAtueba
     */
    public EstoqueAtual() {
        initComponents();
        this.setLocationRelativeTo(null);           // esse comando centraliza o painel do jframe quando em execução
        Color minhaCor = new Color(240, 128, 128);  // já essse muda a cor do painel.
        getContentPane().setBackground(minhaCor);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        Listagem = new javax.swing.JTable();
        Salvar = new javax.swing.JButton();
        Atualizar = new javax.swing.JButton();
        VoltarBotao = new javax.swing.JButton();
        excluirBotao = new javax.swing.JButton();
        panel1 = new java.awt.Panel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Listagem.setBackground(new java.awt.Color(255, 204, 204));
        Listagem.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        Listagem.setForeground(new java.awt.Color(15, 127, 127));
        Listagem.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Espécie", "Quantidade", "Disponibilidade"
            }
        ));
        Listagem.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        Listagem.setGridColor(new java.awt.Color(51, 204, 0));
        Listagem.setSelectionForeground(new java.awt.Color(255, 204, 204));
        jScrollPane1.setViewportView(Listagem);

        Salvar.setBackground(new java.awt.Color(223, 77, 85));
        Salvar.setForeground(new java.awt.Color(255, 255, 255));
        Salvar.setText("Salvar");
        Salvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SalvarActionPerformed(evt);
            }
        });

        Atualizar.setBackground(new java.awt.Color(223, 77, 85));
        Atualizar.setForeground(new java.awt.Color(255, 255, 255));
        Atualizar.setText("Atualizar");
        Atualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AtualizarActionPerformed(evt);
            }
        });

        VoltarBotao.setText("Voltar");
        VoltarBotao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VoltarBotaoActionPerformed(evt);
            }
        });

        excluirBotao.setBackground(new java.awt.Color(255, 0, 0));
        excluirBotao.setForeground(new java.awt.Color(255, 255, 255));
        excluirBotao.setText("Excluir");
        excluirBotao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                excluirBotaoActionPerformed(evt);
            }
        });

        panel1.setBackground(new java.awt.Color(223, 77, 85));

        jLabel1.setFont(new java.awt.Font("Segoe UI Black", 0, 20)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Estoque atual");

        javax.swing.GroupLayout panel1Layout = new javax.swing.GroupLayout(panel1);
        panel1.setLayout(panel1Layout);
        panel1Layout.setHorizontalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panel1Layout.setVerticalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(69, 69, 69)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(Salvar)
                                .addGap(18, 18, 18)
                                .addComponent(excluirBotao)
                                .addGap(195, 195, 195))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(VoltarBotao)
                                .addContainerGap())))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Atualizar)
                                .addGap(51, 51, 51)
                                .addComponent(panel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(91, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(84, 84, 84)
                        .addComponent(Atualizar))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(panel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Salvar)
                    .addComponent(excluirBotao))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addComponent(VoltarBotao)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AtualizarActionPerformed
        String caminho = "C:\\Users\\lorec\\OneDrive\\Documentos\\NetBeansProjects\\Floricultura\\src\\Dados.txt";
        GerenciadorDeArquivos gerenciador = new GerenciadorDeArquivos(caminho);
        ArrayList<Plantas> flores = new ArrayList<Plantas>();
        try {           // try-catch para checar possíveis erros.
            System.out.println("Atualizado com sucesso!");
            flores = (ArrayList<Plantas>) gerenciador.readObject();   // exibe todos os dados salvos no arquivo
        } catch (IOException ex) {                                   //  no painel do estoque atual com auxilio do gerenciador.
            Logger.getLogger(EstoqueAtual.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(EstoqueAtual.class.getName()).log(Level.SEVERE, null, ex);
        }

        DefaultTableModel modelo = (DefaultTableModel) Listagem.getModel();     // metódo que verifica se a tabela possui algum erro.
        modelo.setNumRows(0);
        for (int i = 0; i < flores.size(); i++) {       // for utilizado para exibir todos os dados.
            modelo.addRow( // metodo utilizado para organizar dados do estoque na tabela.
                    new Object[]{
                        flores.get(i).getEspecie2(),
                        flores.get(i).getQuantidade2(),
                        flores.get(i).getDisponibilidade2()
                    }
            );
        }
        Listagem.setModel(modelo);     // exibe!
    }//GEN-LAST:event_AtualizarActionPerformed

    private void SalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SalvarActionPerformed
        String caminho = "C:\\Users\\lorec\\OneDrive\\Documentos\\NetBeansProjects\\Floricultura\\src\\Dados.txt"; // para acessar o arquivo...
        GerenciadorDeArquivos gerenciador = new GerenciadorDeArquivos(caminho);
        ArrayList<Plantas> flores = new ArrayList<Plantas>();

        DefaultTableModel modelo = (DefaultTableModel) Listagem.getModel();     // identificar erros da tabela.

        for (int i = 0; i < modelo.getRowCount(); i++) {            // acessando dados.
            String especie = modelo.getValueAt(i, 0).toString();    // pega os valores, converte para String e organiza na tabela.
            int qnt = Integer.parseInt(modelo.getValueAt(i, 1).toString());
            String disponibilidade = modelo.getValueAt(i, 2).toString();
            
            Plantas planta = new Plantas();     // edição dos dados do arquivo.
            planta.getEspecie(especie);
            planta.getQuantidade(qnt);
            planta.getDisponibilidade(disponibilidade);
            flores.add(planta);                 // adiciona a edição.
        }
        try {                  // try-catch circundado para evitar erros.
            gerenciador.writeObject(flores);    // salva as edições no arquivo.
        } catch (IOException ex) {
            Logger.getLogger(EstoqueAtual.class.getName()).log(Level.SEVERE, null, ex);
        }
        System.out.println("Objeto salvo!");

    }//GEN-LAST:event_SalvarActionPerformed

    private void VoltarBotaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VoltarBotaoActionPerformed
        new CadastroFlores().show();  //Esse botão retorna para a classe principal que vc quer voltar
        dispose();                    //e dispose fecha o atual
    }//GEN-LAST:event_VoltarBotaoActionPerformed

    private void excluirBotaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_excluirBotaoActionPerformed
        DefaultTableModel tabela = (DefaultTableModel) Listagem.getModel();         // esse código elimina a linha selecionada na listagem. (obrigada jp!)
        ((DefaultTableModel) tabela).removeRow(Listagem.getSelectedRow());

        String caminho = "C:\\Users\\lorec\\OneDrive\\Documentos\\NetBeansProjects\\Floricultura\\src\\Dados.txt";
        GerenciadorDeArquivos gerenciador = new GerenciadorDeArquivos(caminho);     // código reciclado do botão de salvar, aqui depois de excluir, 
        ArrayList<Plantas> flores = new ArrayList<Plantas>();                       // automaticamente salva as alterações.

        DefaultTableModel modelo = (DefaultTableModel) Listagem.getModel();

        for (int i = 0; i < modelo.getRowCount(); i++) {

            String especie = modelo.getValueAt(i, 0).toString();
            int qnt = Integer.parseInt(modelo.getValueAt(i, 1).toString());
            String disponibilidade = modelo.getValueAt(i, 2).toString();
            Plantas planta = new Plantas();
            planta.getEspecie(especie);
            planta.getQuantidade(qnt);
            planta.getDisponibilidade(disponibilidade);
            flores.add(planta);
        }
        try {
            gerenciador.writeObject(flores);
        } catch (IOException ex) {
            Logger.getLogger(EstoqueAtual.class.getName()).log(Level.SEVERE, null, ex);
        }
        System.out.println("Objeto excluído!");

    }//GEN-LAST:event_excluirBotaoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EstoqueAtual.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EstoqueAtual.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EstoqueAtual.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EstoqueAtual.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EstoqueAtual().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Atualizar;
    private javax.swing.JTable Listagem;
    private javax.swing.JButton Salvar;
    private javax.swing.JButton VoltarBotao;
    private javax.swing.JButton excluirBotao;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private java.awt.Panel panel1;
    // End of variables declaration//GEN-END:variables
}
